import asyncio
from datetime import datetime, timedelta
from aiogram import Bot
from database import get_reminder_by_id, add_reminder

async def schedule_reminder(bot: Bot, user_id: int, text: str, delay: int, reminder_id: int = None):
    await asyncio.sleep(delay)

    reminder = await get_reminder_by_id(reminder_id)
    if not reminder:
        print(f"‚ùå –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ ID {reminder_id} —É–¥–∞–ª–µ–Ω–æ")
        return
    if reminder["done"]:
        print(f"‚èπ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ ID {reminder_id} –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        return
    if datetime.now() > datetime.fromisoformat(reminder["remind_at"]):
        await bot.send_message(user_id, f"‚ö†Ô∏è –¢—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª –∑–∞–¥–∞—á—É: <b>{text}</b>")
        return

    # ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ, –µ—Å–ª–∏ –µ—Å—Ç—å
    if reminder.get("voice_file_id"):
        await bot.send_voice(user_id, reminder["voice_file_id"], caption=f"üîî –ì–æ–ª–æ—Å–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {text}")
    else:
        await bot.send_message(user_id, f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {text}")

    # üîÅ –ü–æ–≤—Ç–æ—Ä
    repeat = reminder.get("repeat_type")
    if repeat:
        remind_time = datetime.fromisoformat(reminder["remind_at"])
        next_time = None

        if repeat == "daily":
            next_time = remind_time + timedelta(days=1)

        elif repeat == "monday":
            next_time = remind_time
            while next_time.weekday() != 0:
                next_time += timedelta(days=1)

        if next_time:
            new_id = await add_reminder(
                user_id,
                text,
                next_time.isoformat(),
                repeat,
                category=None,  # –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å
                voice_file_id=reminder.get("voice_file_id")
            )
            new_delay = (next_time - datetime.now()).total_seconds()
            asyncio.create_task(schedule_reminder(bot, user_id, text, int(new_delay), new_id))
